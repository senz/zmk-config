/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
 
// https://github.com/urob/zmk-config?tab=readme-ov-file#timeless-homerow-mods
#include "zmk-helpers/key-labels/42.h"                                                  // Source key-labels.
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // Left-hand keys.
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // Right-hand keys.
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                                  // Thumb keys.

#define TTERM_MS 280
#define QTAP_MS 175
#define RPIM_MS 150

/ {
    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <TTERM_MS>;
            quick-tap-ms = <QTAP_MS>;
            require-prior-idle-ms = <RPIM_MS>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <TTERM_MS>;
            quick-tap-ms = <QTAP_MS>;
            require-prior-idle-ms = <RPIM_MS>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
 &kp LWIN  &kp GRAVE   &kp Q   &kp W      &kp E            &kp R      &kp T      &kp Y           &kp U      &kp I    &kp O     &kp P       &kp LBKT  &mt RWIN RBKT
           &kp LCTRL   &kp A   &kp S      &kp D            &kp F      &kp G      &kp H           &kp J      &kp K    &kp L  &kp SEMI  &mt RCTRL SQT
            &kp LALT   &kp Z   &kp X      &kp C            &kp V      &kp B      &kp N           &kp M  &kp COMMA  &kp DOT  &kp FSLH       &kp BSLH
                                      &lt 2 TAB  &mt LSHFT SPACE  &lt 1 RET  &lt 1 ESC  &mt RSHFT BSPC  &lt 2 DEL
            >;
        };

        layer_lower {
            bindings = <
 &trans       &kp UNDER    &kp F1  &kp F2     &kp F3    &kp F4     &kp F5     &kp F6    &kp F7     &kp F8    &kp F9   &kp F10          &kp F11  &mt RGUI F12
         &mt LCTRL PLUS  &kp EXCL  &kp AT   &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS   &kp STAR  &kp LPAR  &kp RPAR  &mt RCTRL MINUS
         &mt LALT EQUAL    &kp N1  &kp N2     &kp N3    &kp N4     &kp N5     &kp N6    &kp N7     &kp N8    &kp N9    &kp N0           &trans
                                           &lt 3 TAB    &trans     &trans     &trans    &trans  &lt 3 DEL
            >;
        };

        layer_raise {
            bindings = <
 &trans       &kp KP_NUM     &kp KP_SLASH  &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS  &kp C_VOL_UP  &kp HOME  &kp PSCRN  &kp PG_UP         &kp SLCK         &kp CAPS  &trans
         &mt LCTRL EQUAL  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6   &kp KP_PLUS    &kp C_MUTE  &kp LEFT     &kp UP  &kp RIGHT          &kp INS  &mt RCTRL K_APP
                  &trans        &kp KP_N0  &kp KP_N1  &kp KP_N2  &kp KP_N3    &kp KP_DOT  &kp C_VOL_DN   &kp END   &kp DOWN  &kp PG_DN  &kp PAUSE_BREAK           &trans
                                                         &trans     &trans     &lt 3 RET     &lt 3 ESC    &trans     &trans
            >;
        };

        layer_adjust {
            bindings = <
 &sys_reset  &bootloader         &none         &none         &none         &none         &none         &none         &none         &none         &none         &none  &bootloader  &sys_reset
          &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0   &bt BT_CLR
               &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &none        &none
                                                        &trans         &none        &trans        &trans         &none        &trans
            >;
        };

    };
};
